{"version":3,"sources":["utils/apiutil.js","pages/Home.js","pages/Login.js","pages/Register.js","pages/EventMap.js","pages/EventList.js","pages/QRCode.js","pages/MainApp.js","App.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","sendReq","url","options","onAuth","onFail","fetch","then","res","a","json","catch","err","console","log","data","status","error","message","toString","JSON","stringify","APIUtil","isAuthenticated","get","authenticate","cb","method","headers","body","dataa","set","token","path","expires","n","Date","setTime","getTime","onehrdate","registerUser","mode","logout","remove","getSelfInfo","getAllEvents","name","registerEvent","eventId","Home","className","Paper","elevation","square","Box","display","style","height","flexDirection","alignItems","justifyContent","to","Button","variant","color","Login","history","useHistory","React","useState","usernameValue","setUsernameValue","passwordValue","setPasswordValue","snackbarOpen","setSnackbarOpen","errorMessage","setErrorMessage","loginButtonText","setLoginButtonText","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","Alert","severity","TextField","placeholder","onChange","target","value","type","onClick","username","password","push","Register","emailValue","setEmailValue","APIUtils","email","EventMap","props","state","lat","lng","zoom","events","setState","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","position","this","center","width","TileLayer","attribution","map","Marker","location","icon","L","iconUrl","iconSize","iconAnchor","Popup","Component","EventList","registeredFor","registeredEvents","Grid","container","spacing","flexWrap","padding","fontFamily","direction","item","Card","minWidth","key","margin","borderRadius","transform","CardContent","Typography","component","imageUrl","CardMedia","image","marginBottom","participants","length","description","CardActions","size","window","reload","_id","includes","MyQRCode","id","MainApp","drawerOpen","flexGrow","Drawer","anchor","onKeyDown","List","match","ListItem","button","ListItemIcon","ListItemText","primary","AppBar","zIndex","Toolbar","IconButton","edge","aria-label","exact","withRouter","makeStyles","theme","root","menuButton","marginRight","title","AuthenticatedRoute","children","rest","render","pathname","from","UnauthenticatedRoute","App","Container","maxWidth","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b67d967.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction sendReq(url, options, onAuth, onFail){\r\n    fetch(url, options)\r\n        .then(async res => {\r\n            var data = await res.json().catch(err => console.log(\"data: `\" + data + \"` err: \" + err));\r\n            console.log(data + \"\\n\" + res)\r\n            switch(res.status){\r\n                case 500: // Invalid/Auth failed\r\n                case 403:\r\n                case 401:\r\n                case 400:\r\n                    console.log(res.status);\r\n                    onFail(data.error.message || ((data.error.toString() == \"[object Object]\") ? JSON.stringify(data.error) : data.error));\r\n                    break;\r\n                case 201:\r\n                case 200:\r\n                    onAuth(data);\r\n                    break;\r\n                default:\r\n                    onFail(\"Something went wrong while contacting the server!\"); // Something went wrong\r\n                    break;\r\n            }\r\n        })\r\n}\r\n\r\nconst APIUtil = {\r\n    isAuthenticated: () => typeof(cookies.get('token')) != \"undefined\",\r\n    authenticate(data, cb) {\r\n        sendReq(\"/api/users/login\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }, dataa => {\r\n            const onehrdate = () => {var n = new Date(); n.setTime(n.getTime + (60*60*1000)); return n};\r\n            cookies.set('token', dataa.token, { path: '/', expires: onehrdate()}); // Token will expire in 1 hour\r\n            cb(1);\r\n        }, error => {\r\n            cb(0, error);\r\n        });\r\n    },\r\n    registerUser(data, cb) {\r\n        sendReq(\"/api/users/register\", {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }, dataa => {\r\n            cb(1);\r\n        }, error => {\r\n            cb(0, error);\r\n        });\r\n    },\r\n    logout(cb) {\r\n        cookies.remove('token');\r\n        cb();\r\n    },\r\n    getSelfInfo(cb){\r\n        sendReq(\"/api/users/me\", {\r\n            headers: {\"Authorization\": \"Bearer \" + cookies.get('token')}\r\n        }, data => {\r\n            cb(1, data);\r\n        }, error => {\r\n            cb(0, error);\r\n        })\r\n    },\r\n    getAllEvents(cb) {\r\n        sendReq(\"/api/events/all\", {\r\n            headers: {\"Authorization\": \"Bearer \" + cookies.get('token')}\r\n        }, data => {\r\n            \r\n            cb(1, data);\r\n        }, error => {\r\n            cb(0, [{name: \"Couldn't find events\"}]);\r\n        });\r\n    },\r\n    registerEvent(cb, eventId) {\r\n        sendReq(\"/api/events/\" + eventId + \"/register\", {\r\n            method: 'POST',\r\n            headers: {\"Authorization\": \"Bearer \" + cookies.get('token')}\r\n        }, data => {\r\n            cb(1, data);\r\n        }, error => {\r\n            cb(0, [{name: \"Couldn't find events\"}]);\r\n        });\r\n    }\r\n};\r\n\r\nexport default APIUtil;","import React from 'react';\r\nimport { Paper, Box, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n    return(\r\n        <div className=\"container\">\r\n            <Paper className=\"square\" elevation={3} square>\r\n                <div className=\"content\">\r\n                    <Box display=\"flex\" style={{height: \"100%\"}} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className=\"box\">\r\n                        <h1>Voluntero</h1>\r\n                        <h3></h3>\r\n                        <div className=\"buttonContainer\">\r\n                            <Link to=\"/login\">\r\n                                <Button variant=\"contained\" color=\"primary\">Login</Button>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <Button variant=\"contained\" color=\"primary\">Register</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n//  box","import React from 'react';\r\nimport { Paper, Box, Button, TextField, Form, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport APIUtil from '../utils/apiutil';\r\n\r\nexport default function Login() {\r\n    let history = useHistory();\r\n\r\n    const [usernameValue, setUsernameValue] = React.useState(\"\");\r\n    const [passwordValue, setPasswordValue] = React.useState(\"\");\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [loginButtonText, setLoginButtonText] = React.useState(\"Log In\");\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway'){\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    Error! {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Paper className=\"square\" elevation={3} square>\r\n                <div className=\"content\">\r\n                    <Box display=\"flex\" style={{height: \"100%\"}} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className=\"box\">\r\n                        <h1>Login!</h1>\r\n                        <div className=\"buttonContainer\">\r\n                            <TextField placeholder=\"Username\" onChange={event => setUsernameValue(event.target.value)} />\r\n                            <TextField placeholder=\"Password\" type=\"password\" onChange={event => setPasswordValue(event.target.value)} />\r\n                            <br/>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                setLoginButtonText(\"Logging in...\");\r\n                                APIUtil.authenticate({\r\n                                    username: usernameValue,\r\n                                    password: passwordValue\r\n                                }, (status, error=\"\") => {\r\n                                    if (status) {\r\n                                        history.push(\"/app\");\r\n                                    } else {\r\n                                        setLoginButtonText(\"Log In\");\r\n                                        setErrorMessage(error);\r\n                                        setSnackbarOpen(true);\r\n                                    }\r\n                                })\r\n                            }}>{loginButtonText}</Button>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Paper, Box, Button, TextField, Form, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Register.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport APIUtils from '../utils/apiutil';\r\n \r\nexport default function Register() {\r\n    let history = useHistory();\r\n\r\n    const [usernameValue, setUsernameValue] = React.useState(\"\");\r\n    const [passwordValue, setPasswordValue] = React.useState(\"\");\r\n    const [emailValue, setEmailValue] = React.useState(\"\");\r\n    const [locationValue, setLocationValue] = React.useState(\"\");\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway'){\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    Error! {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Paper className=\"square\" elevation={3} square>\r\n                <div className=\"content\">\r\n                    <Box display=\"flex\" style={{height: \"100%\"}} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className=\"box\">\r\n                        <h1>Register!</h1>\r\n                        <div className=\"buttonContainer\">\r\n                            <TextField placeholder=\"Username\" onChange={event => setUsernameValue(event.target.value)} />\r\n                            <TextField placeholder=\"Password\" type=\"password\" onChange={event => setPasswordValue(event.target.value)} />\r\n                            <TextField placeholder=\"Email\" onChange={event => setEmailValue(event.target.value)} />\r\n                            <br/>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                APIUtils.registerUser({\r\n                                    username: usernameValue,\r\n                                    password: passwordValue,\r\n                                    email: emailValue\r\n                                }, (status, error=\"\") => {\r\n                                    if (status) {\r\n                                        history.push('/login');\r\n                                    } else {\r\n                                        setErrorMessage(error)\r\n                                        setSnackbarOpen(true);\r\n                                    }\r\n                                });\r\n                            }}>Register</Button>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {\r\n    Map,\r\n    TileLayer,\r\n    Marker,\r\n    Popup,\r\n    ImageOverlay,\r\n    WMSTileLayer\r\n} from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport APIUtil from '../utils/apiutil';\r\n\r\n// uh, when can you speak?\r\n// like \r\n// i asked that a long time ago lol, i was in the middle of it then you switched tabs and i auto-followed you\r\n// coincidence i checked on vsc the same time you respond\r\n// uhh idk, i'll unmute when the house gets louder but holy fuck it's dead silent\r\n// this is big brain time\r\n\r\nexport default class EventMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lat: 39.8283,\r\n            lng: 98.5795,\r\n            zoom: 10,\r\n            events: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*fetch(\"https://api.ipgeolocationapi.com/geolocate\", {\r\n            mode: 'no-cors'\r\n        }).then(async res => {\r\n            var data = await res.json();\r\n            console.log(data);\r\n            this.setState({lat: data.geo.latitude, lng: data.geo.longitude});\r\n        }).catch(() => {\r\n            this.setState({lat: 39.8283, lng: 98.5795, zoom: 3}); // Geographic center of the United States, in case your mom messes things up. :D\r\n        });*/\r\n        APIUtil.getAllEvents((status, data) => {\r\n            console.log(data)\r\n            this.setState(() => {return {events: data.data}})\r\n            console.log(this.state.events)\r\n        });\r\n        if(navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n                this.setState({lat: pos.coords.latitude, lng: pos.coords.longitude});\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const position = [this.state.lat, this.state.lng];\r\n        return(\r\n            <div style={{height: \"100%\"}}>\r\n                <Map center={position} zoom={this.state.zoom} style={{width: \"100%\", height: \"100%\"}}>\r\n                    <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url='https://{s}.tile.osm.org/{z}/{x}/{y}.png' />\r\n                    {this.state.events ? (\r\n                        this.state.events.map(event => (\r\n                            <Marker position={event.location} icon={L.icon({iconUrl: \"/marker.webp\", iconSize: [50, 50], iconAnchor: [25, 50]})}>\r\n                                <Popup>{event.name}</Popup>\r\n                            </Marker>\r\n                        ))\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * var coolDiv = document.getElementById('divID').height\r\n * console.log(coolDiv)\r\n */\r\n\r\n/**\r\n *             <Map center={position} zoom={this.state.zoom} style={{width: \"100%\", height: \"50%\"}} renderer={L.SVG}>\r\n                <WMSTileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url='https://{s}.tile.osm.org/{z}/{x}/{y}.png' />\r\n                <Marker position={position}>\r\n                    <Popup>\r\n                        yeaaaaahhhhhhh\r\n                    </Popup>\r\n                </Marker>\r\n            </Map>\r\n */\r\n\r\n/**\r\n * <LayersControl position=\"topright\">\r\n  <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n    />\r\n  </LayersControl.BaseLayer>\r\n  <LayersControl.BaseLayer name=\"OpenStreetMap.Mapnik\">\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n  </LayersControl.BaseLayer>\r\n  <LayersControl.Overlay name=\"Marker with popup\">\r\n    <Marker position={[51.51, -0.06]}>\r\n      <Popup>\r\n        <span>\r\n          A pretty CSS3 popup. <br /> Easily customizable.\r\n        </span>\r\n      </Popup>\r\n    </Marker>\r\n  </LayersControl.Overlay>\r\n  <LayersControl.Overlay name=\"Feature group\">\r\n    <FeatureGroup color=\"purple\">\r\n      <Popup>\r\n        <span>Popup in FeatureGroup</span>\r\n      </Popup>\r\n      <Circle center={[51.51, -0.06]} radius={200} />\r\n    </FeatureGroup>\r\n  </LayersControl.Overlay>\r\n</LayersControl>\r\n */","import React from \"react\";\r\nimport APIUtil from \"../utils/apiutil\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    CardMedia,\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\n\r\nclass EventList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            registeredFor: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        APIUtil.getSelfInfo((status, data) => {\r\n            this.setState(() => {return {registeredFor: data.registeredEvents}})\r\n        })\r\n        APIUtil.getAllEvents((status, data) => {\r\n            console.log(data);\r\n            this.setState((state) => {\r\n                return { events: data.data };\r\n            });\r\n            console.log(this.state.events);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={3}\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                    padding: \"30px\",\r\n                    fontFamily: 'Comfortaa'\r\n                }}\r\n                direction=\"row\"\r\n            >\r\n                {this.state.events\r\n                    ? this.state.events.map((event) => (\r\n                          <Grid item>\r\n                              <Card\r\n                                  style={{ minWidth: 275 }}\r\n                                  key={event.name}\r\n                                  style={{\r\n                                      margin: \"2em\",\r\n                                      padding: \"2em\",\r\n                                      borderRadius: \"30px\",\r\n                                      transform: \"scale(1.1)\"\r\n                                  }}\r\n                              >\r\n                                  <CardContent>\r\n                                      <Typography variant=\"h5\" component=\"h2\">\r\n                                          {event.name}\r\n                                      </Typography>\r\n                                      {event.imageUrl ? (\r\n                                          <CardMedia image={event.imageUrl}/>\r\n                                      ) : (\r\n                                          \"\"\r\n                                      )}\r\n                                      <Typography\r\n                                          style={{ marginBottom: 12 }}\r\n                                          color=\"textSecondary\"\r\n                                      >\r\n                                          {event.participants.length}{\" \"}\r\n                                          {event.participants.length == 1\r\n                                              ? \"participant\"\r\n                                              : \"participants\"}\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" component=\"p\">\r\n                                          {event.description}\r\n                                      </Typography>\r\n                                  </CardContent>\r\n                                  <CardActions>\r\n                                        <Button size=\"small\" onClick={() => {\r\n                                            APIUtil.registerEvent(() => {\r\n                                                window.location.reload();\r\n                                            }, event._id)\r\n                                        }}>{this.state.registeredFor.includes(event._id) ? \"Unregister\" : \"Register\"}</Button>\r\n                                  </CardActions>\r\n                              </Card>\r\n                          </Grid>\r\n                      ))\r\n                    : \"Loading...\"}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;\r\n","import React from 'react';\r\nimport QRCode from 'react-qr-code';\r\nimport APIUtil from '../utils/apiutil';\r\n\r\nexport default class MyQRCode extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            id: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        APIUtil.getSelfInfo((status, data) => {\r\n            console.log(data);\r\n            this.setState({id: data._id});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.id != \"\" ? <QRCode value={this.state.id} /> : \"Loading...\"}\r\n            </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport Cookies from 'universal-cookie';\r\nimport APIUtil from '../utils/apiutil';\r\nimport { Switch, Route } from 'react-router';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport EventMap from './EventMap';\r\nimport EventList from './EventList';\r\nimport MyQRCode from './QRCode';\r\n\r\nclass MainApp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            drawerOpen: false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ flexGrow: 1 }}>\r\n                <Drawer\r\n                    anchor=\"left\"\r\n                    open={this.state.drawerOpen}\r\n                    onClose={() => {this.setState({drawerOpen: false})}}\r\n                >\r\n                    <div\r\n                        style={{width: 250}}\r\n                        onClick={() => {this.setState({drawerOpen: false})}}\r\n                        onKeyDown={() => {this.setState({drawerOpen: false})}}\r\n                    >\r\n                        <List>\r\n                            <Link to={`${this.props.match.url}/`}>\r\n                                <ListItem button key=\"Map\">\r\n                                    <ListItemIcon><MapIcon /></ListItemIcon>\r\n                                    <ListItemText primary=\"Map\" />\r\n                                </ListItem>\r\n                            </Link>\r\n                            <Link to={`${this.props.match.url}/events`}>\r\n                                <ListItem button key=\"Events\">\r\n                                    <ListItemIcon><EventIcon /></ListItemIcon>\r\n                                    <ListItemText primary=\"Events\" />\r\n                                </ListItem>\r\n                            </Link>\r\n                            <Link to={`${this.props.match.url}/qr`}>\r\n                                <ListItem button key=\"My QR Code\">\r\n                                    <ListItemIcon><CropFreeIcon /></ListItemIcon>\r\n                                    <ListItemText primary=\"My QR Code\" />\r\n                                </ListItem>\r\n                            </Link>\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <AppBar position=\"sticky\" style={{zIndex: 2}}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            onClick={() => {this.setState({drawerOpen: true})}}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n                        Voluntero\r\n                        </Typography>\r\n                        <Button onClick={() => {\r\n                            APIUtil.logout(() => {\r\n                                this.props.history.push(\"/\");\r\n                            });\r\n                        }} color=\"inherit\">Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Switch>\r\n                    <Route exact path={this.props.match.path}>\r\n                        <EventMap />\r\n                    </Route>\r\n                    <Route path={`${this.props.match.path}/events`}>\r\n                        <EventList />\r\n                    </Route>\r\n                    <Route path={`${this.props.match.path}/qr`}>\r\n                        <MyQRCode />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// <EventMap />\r\n\r\nexport default withRouter(MainApp);","import React from 'react';\nimport { Switch, Link, Route, Redirect } from \"react-router-dom\";\nimport {\n  Container,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Drawer\n} from \"@material-ui/core\";\nimport { makeStyles }  from \"@material-ui/core/styles\";\nimport APIUtil from \"./utils/apiutil\";\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport MainApp from './pages/MainApp';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction AuthenticatedRoute({children, ...rest}) {\n  console.log(APIUtil.isAuthenticated());\n  return (\n    <Route\n      {...rest}\n      render={\n        ({location}) => APIUtil.isAuthenticated() ? children : (\n          <Redirect to={{pathname: \"/login\", state: {from: location}}} />\n        )\n      }\n    />\n  )\n}\n\nfunction UnauthenticatedRoute({children, ...rest}) {\n  console.log(APIUtil.isAuthenticated());\n  return (\n    <Route\n      {...rest}\n      render={\n        ({location}) => !APIUtil.isAuthenticated() ? children : (\n          <Redirect to={{pathname: \"/app\", state: {from: location}}} />\n        )\n      }\n    />\n  )\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {drawerOpen: false};\n  }\n\n  // <Container maxWidth=\"sm\" style={{height: \"100vh\"}} >\n\n  render() {\n    return (\n        <Switch>\n          <UnauthenticatedRoute exact path=\"/\">\n            <Container maxWidth=\"sm\" style={{height: \"100vh\"}} >\n              <Home />\n            </Container>\n          </UnauthenticatedRoute>\n          <UnauthenticatedRoute exact path=\"/login\">\n            <Container maxWidth=\"sm\" style={{height: \"100vh\"}} >\n              <Login />\n            </Container>\n          </UnauthenticatedRoute>\n          <UnauthenticatedRoute exact path=\"/register\">\n            <Container maxWidth=\"sm\" style={{height: \"100vh\"}} >\n              <Register />\n            </Container>\n          </UnauthenticatedRoute>\n          <AuthenticatedRoute path=\"/app\">\n            <MainApp />\n          </AuthenticatedRoute>\n        </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}